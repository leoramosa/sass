Curso de sass

@import sirve para importar otro archivos de sass (scss) en el 
archivo principal para que se refleje en el archivo final de style.css

Variables
$ usando el signo de dolar podemos crear variables esto nos sirve para hacer una variable
y poder usarlo en nuestro proyecto varias veces, ejemplo:

$color: red;
$color1: blue;
$color2: green;

.div {
  background-color: $color;//asi podemos usar $color sin poner el codigo del color varias veces//
}

Anidaciones
Con las Anidaciones podemos crear estilos dentro del estilo padre y asi cuando se compile saldra el estilo nombrado con el estilo padre ejemplo:
.btn {
  display: inline-block;
  color: $buttoncolor;
  background-color: $buttonbackgroundcolor;
  .btn__icon{
    font-size: 6em;
  }
  & &__icon{//& con este simbolo podemos nombrar al padre y ya no tendremos que escribirlo
    font-size: 6em;
  }
  .btn--info{
    background-color: $color-info;
  }
}

El resultado sera el siguiente:
.btn {
  display: inline-block;
  color: white;
  background-color: #ea83ee;
  line-height: 2.5;
  border-radius: 4px;
  font-size: 24px;
}

.btn .btn__icon {
  font-size: 6em;
}

.btn .btn__icon {
  font-size: 6em;
}

.btn .btn--info {
  background-color: #42b8dd;
}

Mixins:
Los mixins nos permiten rehusar declaraciones e incluso Modificar el valor cuando
la rehusamos explico un poco más una declaracion nos puede decir que un  color es
igual a red, nosotros podemos  crear un mixins para que siempre color sea red 
pero más podemos modificar. Entonces vamos a ver un ejemplo de un mixins 
vamos a ir incrementando su funcionalidad para ver como hasta dónde podemos 
llegar con los mixes

creamos un archivo _mixins.scss
escribimos:

@mixin max-width{
  max-width: 800px;
  margin-left: auto;
  margin-right: auto;
}

y en otro archivos des sasss ejemplo: _layout.scss podemos utilizar lo que esta en
mixins.scss
para utilizarlo escribimos @include max-width:

section {
  @include max-width;
  background-color: $color-lightgrey;
  padding: $padding;
}

Los mixins pueden ser parametricos, pueden ser parametros.
ejemplo:

@mixin max-width($maxwidth: $page-max-width){//son variables que funcionan en los mixins(unicamentes)
  //al 800px lo vamos a convertir en varible como practica para seguir usando sass
  max-width: $maxwidth;
  margin-left: auto;
  margin-right: auto;
}

//constants
$border-radius:4px;
$padding:24px;
$page-max-width:800px;

Uso de la directiva `content` (`block` en Stylus)
Una de las características que tienen los mixins es la directiva content.
Esta nos permite incluir un bloque de contenido dentro de un mixin.